package com.rsystems.dtos;

import java.io.Serializable;

/*
 * URL Shortener
 * A link shortening service that can be used to turn fully qualified URLs into short codes to be used in links. 
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import java.util.Objects;

import io.swagger.annotations.ApiModelProperty;

/**
 * CreateLink
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-09-24T06:55:07.996Z")
public class CreateLinkDTO implements Serializable {
	private static final long serialVersionUID = 1L;

	private String customerId = null;

	private String url = null;

	public CreateLinkDTO customerId(String customerId) {
		this.customerId = customerId;
		return this;
	}

	/**
	 * The customer ID who is creating the short link
	 * 
	 * @return customerId
	 **/
	@ApiModelProperty(value = "The customer ID who is creating the short link")
	public String getCustomerId() {
		return customerId;
	}

	public void setCustomerId(String customerId) {
		this.customerId = customerId;
	}

	public CreateLinkDTO url(String url) {
		this.url = url;
		return this;
	}

	/**
	 * The fully qualified URL we are shortening
	 * 
	 * @return url
	 **/
	@ApiModelProperty(required = true, value = "The fully qualified URL we are shortening")
	public String getUrl() {
		return url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		CreateLinkDTO createLink = (CreateLinkDTO) o;
		return Objects.equals(this.customerId, createLink.customerId) && Objects.equals(this.url, createLink.url);
	}

	@Override
	public int hashCode() {
		return Objects.hash(customerId, url);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class CreateLink {\n");

		sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
		sb.append("    url: ").append(toIndentedString(url)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

}
