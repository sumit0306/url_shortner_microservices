package com.rsystems.dtos;

import java.io.Serializable;

/*
 * URL Shortener
 * A LinkDTO shortening service that can be used to turn fully qualified URLs into short codes to be used in LinkDTOs. 
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import java.util.Objects;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Shortened URL
 */
@ApiModel(description = "Shortened URL")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-09-24T06:55:07.996Z")
public class LinkDTO implements Serializable {
	private static final long serialVersionUID = 1L;

	private String shortURL = null;

	private Long dateCreated = null;

	private String url = null;

	public LinkDTO shortURL(String shortURL) {
		this.shortURL = shortURL;
		return this;
	}

	/**
	 * Get shortURL
	 * 
	 * @return shortURL
	 **/
	@ApiModelProperty(value = "")
	public String getShortURL() {
		return shortURL;
	}

	public void setShortURL(String shortURL) {
		this.shortURL = shortURL;
	}

	public LinkDTO dateCreated(Long dateCreated) {
		this.dateCreated = dateCreated;
		return this;
	}

	/**
	 * UNIX timestamp in milliseconds at creation
	 * 
	 * @return dateCreated
	 **/
	@ApiModelProperty(value = "UNIX timestamp in milliseconds at creation")
	public Long getDateCreated() {
		return dateCreated;
	}

	public void setDateCreated(Long dateCreated) {
		this.dateCreated = dateCreated;
	}

	public LinkDTO url(String url) {
		this.url = url;
		return this;
	}

	/**
	 * The fully qualified URL
	 * 
	 * @return url
	 **/
	@ApiModelProperty(value = "The fully qualified URL")
	public String getUrl() {
		return url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		LinkDTO LinkDTO = (LinkDTO) o;
		return Objects.equals(this.shortURL, LinkDTO.shortURL) && Objects.equals(this.dateCreated, LinkDTO.dateCreated)
				&& Objects.equals(this.url, LinkDTO.url);
	}

	@Override
	public int hashCode() {
		return Objects.hash(shortURL, dateCreated, url);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class LinkDTO {\n");

		sb.append("    shortURL: ").append(toIndentedString(shortURL)).append("\n");
		sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
		sb.append("    url: ").append(toIndentedString(url)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

}
